name: Build, Push Docker Image
on:
  pull_request:
    branches:
    - master
env: 
  IMAGE_NAME: tech4mud/udit-ridecell-image
  GCP_PROJECT: ridecell-project
  CLUSTER_NAME: ridecell-gke
  DEPLOYMENT_NAME: ridecell-deployment
  NAMESPACE: ridecell
  
jobs:
  build-image: #phase 1
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build and push Docker image
      if: contains(github.event.head_commit.message, 'BUILD_CONTAINER_IMAGE')
      run: | 
        echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u tech4mud --password-stdin
        export GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-4)
        docker image build -t "${{ env.IMAGE_NAME }}":"$GITHUB_SHA_SHORT" .
        docker push "${{ env.IMAGE_NAME }}":"$GITHUB_SHA_SHORT"

      
  #Phase 2
  deploy-image:
    runs-on: ubuntu-latest
    needs: build-image 
    steps: 
    - uses: google-github-actions/setup-gcloud@v0
    - name: create-json
      id: create-json
      uses: jsdaniell/create-json@1.1.2
      with:
        name: "gcp-key.json"
        json: ${{ secrets.CYPRESS_CONFIG_JSON }}
    - name: Deploy On GKE
      # if: contains(github.event.head_commit.message, 'BUILD_CONTAINER_IMAGE')
    #this can be done using a custom helm chart but i'll use a simple kubectl deployment command.
      run: | 
        export GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-4)
        cat gcp-key.json
        gcloud auth activate-service-account --key-file "${{ secrets.GCP_SA_KEY }}" 
        gcloud config set project "${{ env.GCP_PROJECT }}" 
        gcloud config set compute/zone europe-west4-a
        gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region europe-west4 --project "${{ env.GCP_PROJECT }}"
        kubectl create deployment ${{ env.DEPLOYMENT_NAME }} --image ${{ env.IMAGE_NAME }}:${GITHUB_SHA_SHORT} -n ${{ env.NAMESPACE }}








      

